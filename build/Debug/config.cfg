tasks {
	renderer {
		fullscreen = false
       	windowTitle = Engine

		resolution {
			x = 1600
			y = 900
		}

		initialView {
			left = 0
			top = 0
			width = 16 --width and height should have the same ratio as resolution.x and resolution.y
			height = 9 
		}
		
		fillColor {
			red = 78
			green = 192
			blue = 202
		}
	}

    echo_events {
		log = false
    }
}

task {
	defaultTaskFrequency = 16
}

componentContainer {
	growFactor = 16		-- if component container capacity is exceeded, then multiply capacity by this value
	initialCapacity = 4096	-- initial capacity of component container (per component type)
	maxComponentTypes = 4096
}

eventQueue {
	maxEventTypes = 8192
}

engine {
	loggerPath = logz/testMain
}

gameplay { -- user is responsible for validity of this data. Garbage in = garbage out.
	files {
		pacmanTexture = flappy_bird.png
		pipeTexture = flappy_pipe.png
        font = flappy_font.ttf
    }

    score {
        fontSize = 50
    }
	
	pacman {
		speed = 3
		direction = RIGHT
		
		position {
			x = 1.0
			y = 1.0
		}
		size {
			width = 0.5
			height = 0.5
		}
	}

	flappy {
		size {
			width = 0.5
			height = 0.5
		}
		position {
			x = 1.0
			y = 1.0
		}
		forces {
			gravity = 35.0
			forwardConst = 200.0
			lift = -650.0
		}
	}
	
	pipeSegmentWidth = 1.2 -- name says everything. Bigger - harder(maybe even impossble) to pass
    spaceBetweenPipes = 4.0
    initialEmptySpace = 16.0
	
	hole {
		height = 2.5 -- height of the hole. Bigger hole - easier game.
		upperMargin = 0.5 -- hole cannot appear above this value(from view coordinate). So at least this amount of upper pipe will be generated
		lowerMargin = 0.5 -- hole cannot appear under this value(floor is reference point, and it considers hole height, so if hole height is 2.0, then hole position must be max floorLevel - lowerMargin - hole height.)
	}
	
	invisibleSkyHeight = 500.0 -- off screen space, flappy cannot exceed this height(+ all space visible on view)
	floorHeight = 0.5 -- height of floor. Flappy dies on collision with floor, lower pipe segment grows from floor level.
}

camera {
	-- for mouse camera
	zoom {
		factor = 0.1
	}
	pan {
		factor {
			x = 1.0
			y = 1.0
		}
		mouseButtonCode = 2
	}
	
	-- for attached camera
	offset {
		x = 7.0
		y = -3.0
	}
	follow {
		x = 1
		y = 0
	}
}
